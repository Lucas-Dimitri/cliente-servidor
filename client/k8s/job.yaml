apiVersion: batch/v1
kind: Job
metadata:
  name: client-load-test
spec:
  completions: ${NUM_CLIENTES}
  # OTIMIZAÇÃO: Aumentar paralelismo para usar mais recursos
  parallelism: ${NUM_CLIENTES}
  completionMode: Indexed
  # OTIMIZAÇÃO: Reduzir tempo de espera para falhas
  backoffLimit: 1
  activeDeadlineSeconds: 300
  template:
    spec:
      # OTIMIZAÇÃO: Distribuir pods em nós diferentes
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: job-name
                      operator: In
                      values:
                        - client-load-test
                topologyKey: kubernetes.io/hostname
      containers:
        - name: client
          image: meu-cliente
          imagePullPolicy: IfNotPresent
          env:
            - name: JOB_COMPLETION_INDEX
              valueFrom:
                fieldRef:
                  fieldPath: metadata.annotations['batch.kubernetes.io/job-completion-index']
            - name: NUM_MENSAGENS
              value: "${NUM_MENSAGENS}"
            - name: SERVER_SERVICE
              value: "${SERVER_SERVICE}"
          command:
            [
              "sh",
              "-c",
              "python app.py ${JOB_COMPLETION_INDEX} ${NUM_MENSAGENS}",
            ]
          # OTIMIZAÇÃO: Recursos ultra-mínimos para máxima densidade de pods
          resources:
            requests:
              cpu: "25m" # Ultra reduzido para permitir mais pods
              memory: "16Mi" # Ultra reduzido para permitir mais pods
            # Sem limits - usar todos os recursos disponíveis
      restartPolicy: Never
      # OTIMIZAÇÃO: Reduzir tempo de terminação
      terminationGracePeriodSeconds: 5
